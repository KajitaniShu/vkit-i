{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiira_p\\\\Desktop\\\\program\\\\\\u5149\\u5B66\\u6559\\u80B2\\u30B3\\u30F3\\u30C6\\u30F3\\u30C4\\\\kougaku-editor\\\\kougaku-editor\\\\src\\\\components\\\\Draw2D.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Draw2D = _ref => {\n  _s();\n\n  let {\n    itemList,\n    setItemList\n  } = _ref;\n\n  function init2Dmodel(id, x, y, z) {\n    $('#' + id).offset({\n      top: y,\n      left: x\n    });\n    $('#' + id).on(\"mouseup\", function (e) {\n      itemList.map((value, key) => {\n        if (value.id == id) {\n          const newItemList = itemList;\n          newItemList[key].x = $('#' + id).offset().left - 180;\n          newItemList[key].y = $('#' + id).offset().top - 180;\n          console.log($('#' + id).offset().top - 60);\n          setItemList(newItemList);\n        }\n      });\n    });\n  }\n\n  useEffect(() => {\n    itemList.map((value, key) => {\n      update(ele); // 状態の更新\n\n      init2Dmodel(value.id, value.x + 180, value.y + 180, value.z + 180);\n      console.log(value.id, value.x + 180, value.y + 180, value.z + 180);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Draw2D\",\n    children: itemList.map((value, key) => {\n      return /*#__PURE__*/_jsxDEV(Model, {\n        value: value\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n/* field */\n\n_s(Draw2D, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Draw2D;\nvar selected_elements = []; // 選択中の要素を格納する配列\n\n/* methods */\n// 更新があったときに呼び出される\n\nfunction update(ele) {\n  // 適当なidを割り振る\n  // .move要素を移動可能にする\n  ele.draggable({\n    containment: \".Draw2D\" //ドラッグの範囲を制限\n\n  }); // 選択可能にする\n\n  ele.click(function () {\n    if (ele.hasClass('selected')) {\n      ele.removeClass('selected'); // 要素からselectedクラスを削除\n\n      selected_elements = selected_elements.filter(n => n !== ele); // selected_elements配列から，eleのみを削除する\n    } else {\n      ele.addClass('selected'); // 要素にselectedクラスを追加\n\n      selected_elements.push(ele); // 配列に追加\n    }\n  });\n}\n/* UUID生成 */\n// Cf. https://qiita.com/psn/items/d7ac5bdb5b5633bae165\n\n\nfunction generateUuid() {\n  // https://github.com/GoogleChrome/chrome-platform-analytics/blob/master/src/internal/identifier.js\n  // const FORMAT: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n  let chars = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\");\n\n  for (let i = 0, len = chars.length; i < len; i++) {\n    switch (chars[i]) {\n      case \"x\":\n        chars[i] = Math.floor(Math.random() * 16).toString(16);\n        break;\n\n      case \"y\":\n        chars[i] = (Math.floor(Math.random() * 4) + 8).toString(16);\n        break;\n    }\n  }\n\n  return chars.join(\"\");\n}\n/*二次元回転*/\n// 度数をradに変換\n// https://lab.syncer.jp/Web/JavaScript/Snippet/51/\n\n\nfunction deg2rad(degree) {\n  return degree * (Math.PI / 180);\n} // CSS matrixを配列に変換する\n// https://qiita.com/shogito/items/a5be366464d8cca5bafb\n\n\nfunction matrix2vec(matrix) {\n  var re = /matrix\\((.*)\\)/;\n  var vals = matrix.match(re)[1].replace(/ /g, \"\").split(\",\");\n  vec = vals.map(Number);\n  return vec;\n}\n\nfunction vec2matrix(vec) {\n  var vals = []; // 有効桁数を揃える\n\n  vals[0] = vec[0].toFixed(20);\n  vals[1] = vec[1].toFixed(20);\n  vals[2] = vec[2].toFixed(20);\n  vals[3] = vec[3].toFixed(20);\n  vals[4] = vec[4].toFixed(20);\n  vals[5] = vec[5].toFixed(20); // 文字列化\n\n  var matrix = \"matrix(\" + vals[0] + \",\" + vals[1] + \",\" + vals[2] + \",\" + vals[3] + \",\" + vals[4] + \",\" + vals[5] + \")\";\n  return matrix;\n} // CSS matrixの二次元回転\n// https://w3e.kanazawa-it.ac.jp/math/category/gyouretu/senkeidaisu/henkan-tex.cgi?target=/math/category/gyouretu/senkeidaisu/rotation_matrix_2d.html\n// https://ginpen.com/2018/11/13/understanding-transform-matrix/\n\n\nfunction rotate2D(vec, degree) {\n  var ret = new Array(6); // xベクトルに二次元回転行列をかける\n\n  ret[0] = vec[0] * Math.cos(deg2rad(degree)) - vec[1] * Math.sin(deg2rad(degree));\n  ret[1] = vec[0] * Math.sin(deg2rad(degree)) + vec[1] * Math.cos(deg2rad(degree)); // yベクトルに二次元回転行列をかける\n\n  ret[2] = vec[2] * Math.cos(deg2rad(degree)) - vec[3] * Math.sin(deg2rad(degree));\n  ret[3] = vec[2] * Math.sin(deg2rad(degree)) + vec[3] * Math.cos(deg2rad(degree)); // 起点の指定\n\n  ret[4] = vec[4];\n  ret[5] = vec[5];\n  return ret;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Draw2D\");","map":{"version":3,"sources":["C:/Users/hiira_p/Desktop/program/光学教育コンテンツ/kougaku-editor/kougaku-editor/src/components/Draw2D.js"],"names":["React","useState","useEffect","Draw2D","itemList","setItemList","init2Dmodel","id","x","y","z","$","offset","top","left","on","e","map","value","key","newItemList","console","log","update","ele","selected_elements","draggable","containment","click","hasClass","removeClass","filter","n","addClass","push","generateUuid","chars","split","i","len","length","Math","floor","random","toString","join","deg2rad","degree","PI","matrix2vec","matrix","re","vals","match","replace","vec","Number","vec2matrix","toFixed","rotate2D","ret","Array","cos","sin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const Draw2D = ({itemList, setItemList}) => {\n\n    function init2Dmodel(id, x, y, z){\n        $('#'+id).offset({ top: y, left: x});\n        $('#'+id).on(\"mouseup\", function(e) {\n            itemList.map((value, key) => {\n                if(value.id == id){\n                    const newItemList = itemList;\n                    newItemList[key].x = $('#'+id).offset().left - 180;\n                    newItemList[key].y = $('#'+id).offset().top - 180;\n                    console.log( $('#'+id).offset().top - 60);\n                    setItemList(newItemList);\n                }\n            })\n        });\n    }\n\n    useEffect(() => {\n        itemList.map((value, key) => {\n            \n            update(ele);    // 状態の更新\n            init2Dmodel(value.id, value.x+180, value.y+180, value.z+180);\n            console.log(value.id, value.x+180, value.y+180, value.z+180);\n        })\n    });\n\n    return (\n        <div className=\"Draw2D\">\n            {itemList.map((value, key) => {\n                        return (\n                            <Model value={value} key={key}/>\n                        )\n                    })}\n        </div>\n    );\n}\n\n\n\n/* field */\nvar selected_elements = [];  // 選択中の要素を格納する配列\n\n/* methods */\n// 更新があったときに呼び出される\nfunction update(ele){\n    // 適当なidを割り振る\n    // .move要素を移動可能にする\n    ele.draggable({\n        containment: \".Draw2D\" //ドラッグの範囲を制限\n    });\n    // 選択可能にする\n    ele.click(function(){\n        if( ele.hasClass('selected') ){\n            ele.removeClass('selected');    // 要素からselectedクラスを削除\n            selected_elements = selected_elements.filter(n => n !== ele);   // selected_elements配列から，eleのみを削除する\n        }\n        else{\n            ele.addClass('selected');       // 要素にselectedクラスを追加\n            selected_elements.push(ele);    // 配列に追加\n        }\n    });\n}\n\n\n\n\n/* UUID生成 */\n// Cf. https://qiita.com/psn/items/d7ac5bdb5b5633bae165\nfunction generateUuid() {\n    // https://github.com/GoogleChrome/chrome-platform-analytics/blob/master/src/internal/identifier.js\n    // const FORMAT: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n    let chars = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\");\n    for (let i = 0, len = chars.length; i < len; i++) {\n        switch (chars[i]) {\n            case \"x\":\n                chars[i] = Math.floor(Math.random() * 16).toString(16);\n                break;\n            case \"y\":\n                chars[i] = (Math.floor(Math.random() * 4) + 8).toString(16);\n                break;\n        }\n    }\n    return chars.join(\"\");\n}\n\n\n\n/*二次元回転*/\n// 度数をradに変換\n// https://lab.syncer.jp/Web/JavaScript/Snippet/51/\nfunction deg2rad(degree){\n    return degree * ( Math.PI / 180 ) ;\n}\n\n// CSS matrixを配列に変換する\n// https://qiita.com/shogito/items/a5be366464d8cca5bafb\nfunction matrix2vec(matrix){\n    var re = /matrix\\((.*)\\)/;\n    var vals = matrix.match(re)[1].replace(/ /g, \"\").split(\",\");\n    vec = vals.map(Number)\n    return vec;\n}\nfunction vec2matrix(vec){\n    var vals = [];\n    // 有効桁数を揃える\n    vals[0] = vec[0].toFixed(20);\n    vals[1] = vec[1].toFixed(20);\n    vals[2] = vec[2].toFixed(20);\n    vals[3] = vec[3].toFixed(20);\n    vals[4] = vec[4].toFixed(20);\n    vals[5] = vec[5].toFixed(20);\n    // 文字列化\n    var matrix = \n        \"matrix(\"+\n        vals[0]+\",\"+\n        vals[1]+\",\"+\n        vals[2]+\",\"+\n        vals[3]+\",\"+\n        vals[4]+\",\"+\n        vals[5]+\")\";\n    return matrix;\n}\n\n// CSS matrixの二次元回転\n// https://w3e.kanazawa-it.ac.jp/math/category/gyouretu/senkeidaisu/henkan-tex.cgi?target=/math/category/gyouretu/senkeidaisu/rotation_matrix_2d.html\n// https://ginpen.com/2018/11/13/understanding-transform-matrix/\nfunction rotate2D(vec,degree){\n    var ret = new Array(6);\n    // xベクトルに二次元回転行列をかける\n    ret[0] = vec[0]*Math.cos(deg2rad(degree)) - vec[1]*Math.sin(deg2rad(degree));\n    ret[1] = vec[0]*Math.sin(deg2rad(degree)) + vec[1]*Math.cos(deg2rad(degree));\n    // yベクトルに二次元回転行列をかける\n    ret[2] = vec[2]*Math.cos(deg2rad(degree)) - vec[3]*Math.sin(deg2rad(degree));\n    ret[3] = vec[2]*Math.sin(deg2rad(degree)) + vec[3]*Math.cos(deg2rad(degree));\n    // 起点の指定\n    ret[4] = vec[4];\n    ret[5] = vec[5];\n    return ret;\n}\n"]},"metadata":{},"sourceType":"module"}