{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiira_p\\\\Desktop\\\\program\\\\\\u5149\\u5B66\\u6559\\u80B2\\u30B3\\u30F3\\u30C6\\u30F3\\u30C4\\\\kougaku-editor\\\\kougaku-editor\\\\src\\\\components\\\\Model2D.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDrag } from \"@use-gesture/react\";\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\";\nimport * as THREE from 'three'; // 文字数をカウント (半角に対応)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction count(text) {\n  var length = 0.0;\n\n  for (var i = 0; i < text.length; i++) {\n    text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n  }\n\n  return length;\n}\n\nexport const Model2D = _ref => {\n  _s();\n\n  let {\n    value,\n    plane,\n    itemList,\n    setItemList\n  } = _ref;\n  console.log(value.pos);\n  const [needUpdate, setNeedUpdate] = useState(false);\n  const [pos, setPos] = useState(Math.roundvalue.pos);\n  const [isActive, setIsActve] = useState(false);\n  const {\n    box\n  } = new THREE.BoxGeometry(1, 1, 1);\n\n  var _pos = new THREE.Vector3();\n\n  const dragObj = useRef();\n  const bind = useDrag(_ref2 => {\n    let {\n      active,\n      event\n    } = _ref2;\n    setIsActve(active);\n\n    if (active) {\n      event.ray.intersectPlane(plane, _pos);\n      setPos([_pos.x, _pos.y, _pos.z]);\n      setNeedUpdate(true);\n    } else if (needUpdate) {\n      setPos([Math.round(pos[0]), Math.round(pos[1]), Math.round(pos[2])]);\n      var newItemList = itemList;\n      {\n        newItemList.map((item, key) => {\n          if (value === item) item.pos = pos;\n        });\n      }\n      setItemList(newItemList);\n      setNeedUpdate(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...bind(),\n    children: [/*#__PURE__*/_jsxDEV(Html, {\n      position: [pos[0], pos[1] + 2, pos[2]],\n      center: true,\n      className: \"innerText\",\n      style: {\n        width: count(value.name) + 1 + 'em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: value.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Drei.Box, {\n      obejct: box,\n      position: pos,\n      scale: isActive ? 1.2 : 1,\n      ref: dragObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Model2D, \"xJifWSTQt+8pO2dIah7oV2b26ro=\", false, function () {\n  return [useDrag];\n});\n\n_c = Model2D;\n\nvar _c;\n\n$RefreshReg$(_c, \"Model2D\");","map":{"version":3,"sources":["C:/Users/hiira_p/Desktop/program/光学教育コンテンツ/kougaku-editor/kougaku-editor/src/components/Model2D.js"],"names":["React","useState","useRef","useDrag","Drei","Html","Stats","THREE","count","text","length","i","match","Model2D","value","plane","itemList","setItemList","console","log","pos","needUpdate","setNeedUpdate","setPos","Math","roundvalue","isActive","setIsActve","box","BoxGeometry","_pos","Vector3","dragObj","bind","active","event","ray","intersectPlane","x","y","z","round","newItemList","map","item","key","width","name"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react'\nimport { useDrag } from \"@use-gesture/react\";\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\";\nimport * as THREE from 'three'\n\n// 文字数をカウント (半角に対応)\nfunction count(text){\n    var length = 0.0;\n    for(var i=0; i < text.length; i++) {\n        text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n    }\n    return length;\n}\n\nexport const Model2D = ({ value, plane, itemList, setItemList }) => {\n    console.log(value.pos);\n    const [needUpdate, setNeedUpdate] = useState(false);\n    const [pos, setPos] = useState(Math.roundvalue.pos);\n    const [isActive, setIsActve] = useState(false);\n    const {box} = new THREE.BoxGeometry( 1, 1, 1 );\n\n    var _pos = new THREE.Vector3();\n    \n    const dragObj = useRef();\n    const bind = useDrag(\n        ({active, event}) => {\n            setIsActve(active);\n            if(active) {\n                event.ray.intersectPlane(plane, _pos);\n                setPos([_pos.x, _pos.y, _pos.z]);\n                setNeedUpdate(true);\n            }else if(needUpdate){\n                setPos([Math.round(pos[0]), Math.round(pos[1]), Math.round(pos[2])]);\n                \n                var newItemList = itemList;\n                {newItemList.map((item, key) => {\n                    if(value === item) item.pos = pos;\n                })}\n                setItemList(newItemList);\n                \n                setNeedUpdate(false);\n            }\n            \n        }\n    );\n\n    return (\n    <mesh {...bind()}>\n        <Html position={[pos[0], pos[1]+2, pos[2]]} center={true} className=\"innerText\" style={{width: count(value.name)+1+'em'}} >\n            <p>{value.name}</p>\n        </Html>\n    \n        <Drei.Box  obejct={box} position={pos} scale={isActive ? 1.2 : 1} ref={dragObj}/>\n    </mesh>       \n    )\n}"]},"metadata":{},"sourceType":"module"}