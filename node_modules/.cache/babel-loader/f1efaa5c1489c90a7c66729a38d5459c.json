{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiira_p\\\\Desktop\\\\program\\\\\\u5149\\u5B66\\u6559\\u80B2\\u30B3\\u30F3\\u30C6\\u30F3\\u30C4\\\\kougaku-editor\\\\kougaku-editor\\\\src\\\\components\\\\Model.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\"; // 文字数をカウント (半角に対応)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction count(text) {\n  var length = 0.0;\n\n  for (var i = 0; i < text.length; i++) {\n    text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n  }\n\n  return length;\n}\n\nexport const Model = _ref => {\n  _s();\n\n  let {\n    input_path\n  } = _ref;\n  const {\n    scene\n  } = Drei.useGLTF(input_path);\n  const name = \"レーザー\";\n\n  if (input_path === \"./models/map_nature.glb\") {\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n        position: [0, 0, 0],\n        object: scene,\n        roughness: 0,\n        smoothness: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      castShadow: true,\n      receiveShadow: true,\n      children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n        position: [0, 0, 0],\n        object: scene,\n        roughness: 0,\n        smoothness: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Model, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [Drei.useGLTF];\n});\n\n_c = Model;\n\nvar _c;\n\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"sources":["C:/Users/hiira_p/Desktop/program/光学教育コンテンツ/kougaku-editor/kougaku-editor/src/components/Model.js"],"names":["React","Drei","Html","Stats","count","text","length","i","match","Model","input_path","scene","useGLTF","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B,C,CAEA;;;;AACA,SAASC,KAAT,CAAeC,IAAf,EAAoB;AAChB,MAAIC,MAAM,GAAG,GAAb;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGF,IAAI,CAACC,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;AAC/BF,IAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQC,KAAR,CAAc,OAAd,IAAyBF,MAAM,IAAI,GAAnC,GAAyCA,MAAM,IAAI,GAAnD;AACH;;AACD,SAAOA,MAAP;AACH;;AAED,OAAO,MAAMG,KAAK,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAYV,IAAI,CAACW,OAAL,CAAaF,UAAb,CAAlB;AACA,QAAMG,IAAI,GAAC,MAAX;;AACA,MAAGH,UAAU,KAAG,yBAAhB,EAA0C;AACtC,wBACI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,aAAa,MAA9B;AAAA,6BAMI;AAAY,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtB;AAA+B,QAAA,MAAM,EAAEC,KAAvC;AAA8C,QAAA,SAAS,EAAE,CAAzD;AAA4D,QAAA,UAAU,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAXD,MAWK;AACD,wBACI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,aAAa,MAA9B;AAAA,6BAMI;AAAY,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtB;AAA+B,QAAA,MAAM,EAAEA,KAAvC;AAA8C,QAAA,SAAS,EAAE,CAAzD;AAA4D,QAAA,UAAU,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;AACJ,CA1BM;;GAAMF,K;UACSR,IAAI,CAACW,O;;;KADdH,K","sourcesContent":["import React from 'react'\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\";\n\n// 文字数をカウント (半角に対応)\nfunction count(text){\n    var length = 0.0;\n    for(var i=0; i < text.length; i++) {\n        text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n    }\n    return length;\n}\n\nexport const Model = ({input_path}) => {\n    const { scene } = Drei.useGLTF(input_path);\n    const name=\"レーザー\"\n    if(input_path===\"./models/map_nature.glb\"){\n        return (\n            <mesh castShadow receiveShadow>\n                {/*\n                <Html position={[0,5,0]} className=\"innerText\" style={{width: count(name)+1+'em'}} distanceFactor={30} occlude={true}>\n                    <p>{name}</p>\n                </Html>\n                */}\n                <primitive  position={[0,0,0]} object={scene} roughness={0} smoothness={10}/>\n            </mesh>        \n            )\n    }else{\n        return (\n            <mesh castShadow receiveShadow>\n                {/*\n                <Html position={[0,5,0]} className=\"innerText\" style={{width: count(name)+1+'em'}} distanceFactor={30} occlude={true}>\n                    <p>{name}</p>\n                </Html>\n                */}\n                <primitive  position={[0,0,0]} object={scene} roughness={0} smoothness={10}/>\n            </mesh>        \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}