{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiira_p\\\\Desktop\\\\program\\\\\\u5149\\u5B66\\u6559\\u80B2\\u30B3\\u30F3\\u30C6\\u30F3\\u30C4\\\\kougaku-editor\\\\kougaku-editor\\\\src\\\\components\\\\Model2D.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDrag } from \"@use-gesture/react\";\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\";\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Canvas, extend, useThree } from \"react-three-fiber\";\nimport * as THREE from 'three';\nimport ReactDOM from 'react-dom';\nimport { animated, useSpring } from \"@react-spring/three\"; // 文字数をカウント (半角に対応)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction count(text) {\n  var length = 0.0;\n\n  for (var i = 0; i < text.length; i++) {\n    text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n  }\n\n  return length;\n}\n\nextend({\n  DragControls\n});\nexport const Model2D = _ref => {\n  _s();\n\n  let {\n    value,\n    plane,\n    setItemList\n  } = _ref;\n  const [pos, setPos] = useState([0, 0, 0.5]);\n  const [isActive, setIsActve] = useState(false);\n  const {\n    box\n  } = new THREE.BoxGeometry(1, 1, 1);\n  const [spring, api] = useSpring(() => ({\n    // position: [0, 0, 0],\n    position: pos,\n    scale: 1,\n    rotation: [0, 0, 0],\n    config: {\n      friction: 10\n    }\n  }));\n\n  var _pos = new THREE.Vector3();\n\n  const dragObj = useRef();\n  const bind = useDrag(_ref2 => {\n    let {\n      active,\n      event\n    } = _ref2;\n\n    if (active) {\n      event.ray.intersectPlane(plane, _pos);\n      setPos([_pos.x, _pos.y, 0.5]);\n      setActive(true);\n    }\n\n    api.start({\n      position: pos\n    });\n    setActive(false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...bind(),\n    children: [/*#__PURE__*/_jsxDEV(Html, {\n      position: pos,\n      center: true,\n      className: \"innerText\",\n      style: {\n        width: count(value.name) + 1 + 'em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: value.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Drei.Box, {\n      obejct: box,\n      position: pos,\n      scale: isActive ? 1.2 : 1,\n      ref: dragObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Model2D, \"iH4k63KEvUmyLacivOypAqOAwbk=\", false, function () {\n  return [useSpring, useDrag];\n});\n\n_c = Model2D;\n\nvar _c;\n\n$RefreshReg$(_c, \"Model2D\");","map":{"version":3,"sources":["C:/Users/hiira_p/Desktop/program/光学教育コンテンツ/kougaku-editor/kougaku-editor/src/components/Model2D.js"],"names":["React","useState","useRef","useDrag","Drei","Html","Stats","DragControls","OrbitControls","Canvas","extend","useThree","THREE","ReactDOM","animated","useSpring","count","text","length","i","match","Model2D","value","plane","setItemList","pos","setPos","isActive","setIsActve","box","BoxGeometry","spring","api","position","scale","rotation","config","friction","_pos","Vector3","dragObj","bind","active","event","ray","intersectPlane","x","y","setActive","start","width","name"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react'\nimport { useDrag } from \"@use-gesture/react\";\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\";\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Canvas, extend, useThree } from \"react-three-fiber\"\nimport * as THREE from 'three'\nimport ReactDOM from 'react-dom'\nimport { animated, useSpring } from \"@react-spring/three\";\n\n// 文字数をカウント (半角に対応)\nfunction count(text){\n    var length = 0.0;\n    for(var i=0; i < text.length; i++) {\n        text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n    }\n    return length;\n}\n\nextend({ DragControls })\n\nexport const Model2D = ({ value, plane, setItemList }) => {\n    const [pos, setPos]     = useState([0, 0, 0.5]);\n    const [isActive, setIsActve] = useState(false);\n    const {box} = new THREE.BoxGeometry( 1, 1, 1 );\n    const [spring, api] = useSpring(() => ({\n        // position: [0, 0, 0],\n        position: pos,\n        scale: 1,\n        rotation: [0, 0, 0],\n        config: { friction: 10 }\n    }));\n\n    var _pos = new THREE.Vector3();\n    const dragObj = useRef();\n    const bind = useDrag(\n        ({active, event}) => {\n            if(active) {\n                event.ray.intersectPlane(plane, _pos);\n                setPos([_pos.x, _pos.y, 0.5]);\n                setActive(true);\n            }\n            api.start({\n                position: pos\n            });\n            setActive(false);\n        }\n    );\n\n    return (\n    <mesh {...bind()}>\n        <Html position={pos} center={true} className=\"innerText\" style={{width: count(value.name)+1+'em'}} >\n            <p>{value.name}</p>\n        </Html>\n        <Drei.Box  obejct={box} position={pos} scale={isActive ? 1.2 : 1} ref={dragObj}/>\n    </mesh>       \n    )\n}"]},"metadata":{},"sourceType":"module"}