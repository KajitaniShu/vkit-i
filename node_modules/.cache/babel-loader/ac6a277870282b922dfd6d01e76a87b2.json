{"ast":null,"code":"import React from 'react';\nexport const Draw2D = _ref => {\n  let {\n    itemList,\n    setItemList\n  } = _ref;\n\n  function init2Dmodel(id, x, y, z) {\n    ele = $('<img src=' + src + ' idclassName=\"img move\">').appendTo('.drop_area'); // 要素の追加\n\n    $('#' + id).offset({\n      top: x,\n      left: y\n    });\n  }\n};\n/* field */\n\n_c = Draw2D;\nvar selected_elements = []; // 選択中の要素を格納する配列\n\n/* methods */\n// ボタンの有効化\n\nfunction enableButton() {\n  // 追加する要素を格納する変数\n  var ele; // ボタンクリック時の動作：青\n\n  $(\"#appendBlue\").click(function () {\n    console.log(\"青\", ele);\n    ele = $('<div class=\"b move\"></div>').appendTo('.drop_area'); // 要素の追加\n\n    update(ele); // 状態の更新\n  }); // ボタンクリック時の動作：赤\n\n  $(\"#appendRed\").click(function () {\n    console.log(\"赤\", ele);\n    ele = $('<div class=\"r move\"></div>').appendTo('.drop_area'); // 要素の追加\n\n    update(ele); // 状態の更新\n  }); // ボタンクリック時の動作：画像\n\n  $(\"#appendImage\").click(function () {\n    console.log(\"画像\", ele);\n    ele = $('<img src=\"img/test.png\" class=\"img move\">').appendTo('.drop_area'); // 要素の追加\n\n    update(ele); // 状態の更新\n  }); // 選択要素の削除ボタン\n\n  $(\"#deleteSelectedElement\").click(function () {\n    $('.selected').remove();\n    selected_elements = [];\n  }); // 選択要素の回転ボタン\n\n  $(\"#rotateSelectedElement\").click(function () {\n    // 選択中の全ての要素に対して45度の回転を適用\n    selected_elements.forEach(function (target_element) {\n      var mat = target_element.css(\"transform\"); // matrixを取得\n\n      var vec = matrix2vec(mat); // matrixを行列に変換\n\n      vec = rotate2D(vec, 45); // 行列を45度回転\n\n      mat = vec2matrix(vec); // 行列をmatrixに戻す\n\n      target_element.css('transform', mat); // 回転\n    });\n  });\n} // 更新があったときに呼び出される\n\n\nfunction update(ele) {\n  // 適当なidを割り振る\n  uuid = generateUuid();\n  ele.attr('id', uuid); // .move要素を移動可能にする\n\n  ele.draggable({\n    containment: \".drop_area\" //ドラッグの範囲を制限\n\n  }); // 選択可能にする\n\n  ele.click(function () {\n    if (ele.hasClass('selected')) {\n      ele.removeClass('selected'); // 要素からselectedクラスを削除\n\n      selected_elements = selected_elements.filter(n => n !== ele); // selected_elements配列から，eleのみを削除する\n    } else {\n      ele.addClass('selected'); // 要素にselectedクラスを追加\n\n      selected_elements.push(ele); // 配列に追加\n    }\n  });\n}\n/* UUID生成 */\n// Cf. https://qiita.com/psn/items/d7ac5bdb5b5633bae165\n\n\nfunction generateUuid() {\n  // https://github.com/GoogleChrome/chrome-platform-analytics/blob/master/src/internal/identifier.js\n  // const FORMAT: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n  let chars = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\");\n\n  for (let i = 0, len = chars.length; i < len; i++) {\n    switch (chars[i]) {\n      case \"x\":\n        chars[i] = Math.floor(Math.random() * 16).toString(16);\n        break;\n\n      case \"y\":\n        chars[i] = (Math.floor(Math.random() * 4) + 8).toString(16);\n        break;\n    }\n  }\n\n  return chars.join(\"\");\n}\n/*二次元回転*/\n// 度数をradに変換\n// https://lab.syncer.jp/Web/JavaScript/Snippet/51/\n\n\nfunction deg2rad(degree) {\n  return degree * (Math.PI / 180);\n} // CSS matrixを配列に変換する\n// https://qiita.com/shogito/items/a5be366464d8cca5bafb\n\n\nfunction matrix2vec(matrix) {\n  var re = /matrix\\((.*)\\)/;\n  var vals = matrix.match(re)[1].replace(/ /g, \"\").split(\",\");\n  vec = vals.map(Number);\n  return vec;\n}\n\nfunction vec2matrix(vec) {\n  var vals = []; // 有効桁数を揃える\n\n  vals[0] = vec[0].toFixed(20);\n  vals[1] = vec[1].toFixed(20);\n  vals[2] = vec[2].toFixed(20);\n  vals[3] = vec[3].toFixed(20);\n  vals[4] = vec[4].toFixed(20);\n  vals[5] = vec[5].toFixed(20); // 文字列化\n\n  var matrix = \"matrix(\" + vals[0] + \",\" + vals[1] + \",\" + vals[2] + \",\" + vals[3] + \",\" + vals[4] + \",\" + vals[5] + \")\";\n  return matrix;\n} // CSS matrixの二次元回転\n// https://w3e.kanazawa-it.ac.jp/math/category/gyouretu/senkeidaisu/henkan-tex.cgi?target=/math/category/gyouretu/senkeidaisu/rotation_matrix_2d.html\n// https://ginpen.com/2018/11/13/understanding-transform-matrix/\n\n\nfunction rotate2D(vec, degree) {\n  var ret = new Array(6); // xベクトルに二次元回転行列をかける\n\n  ret[0] = vec[0] * Math.cos(deg2rad(degree)) - vec[1] * Math.sin(deg2rad(degree));\n  ret[1] = vec[0] * Math.sin(deg2rad(degree)) + vec[1] * Math.cos(deg2rad(degree)); // yベクトルに二次元回転行列をかける\n\n  ret[2] = vec[2] * Math.cos(deg2rad(degree)) - vec[3] * Math.sin(deg2rad(degree));\n  ret[3] = vec[2] * Math.sin(deg2rad(degree)) + vec[3] * Math.cos(deg2rad(degree)); // 起点の指定\n\n  ret[4] = vec[4];\n  ret[5] = vec[5];\n  return ret;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Draw2D\");","map":{"version":3,"sources":["C:/Users/hiira_p/Desktop/program/光学教育コンテンツ/kougaku-editor/kougaku-editor/src/components/Draw2D.js"],"names":["React","Draw2D","itemList","setItemList","init2Dmodel","id","x","y","z","ele","$","src","appendTo","offset","top","left","selected_elements","enableButton","click","console","log","update","remove","forEach","target_element","mat","css","vec","matrix2vec","rotate2D","vec2matrix","uuid","generateUuid","attr","draggable","containment","hasClass","removeClass","filter","n","addClass","push","chars","split","i","len","length","Math","floor","random","toString","join","deg2rad","degree","PI","matrix","re","vals","match","replace","map","Number","toFixed","ret","Array","cos","sin"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport const Draw2D = ({itemList, setItemList}) => {\n\n    function init2Dmodel(id, x, y, z){\n        ele = $('<img src=' + src + ' idclassName=\"img move\">').appendTo('.drop_area');    // 要素の追加\n        $('#'+id).offset({ top: x, left: y });\n    }\n    \n    \n}\n\n\n/* field */\nvar selected_elements = [];  // 選択中の要素を格納する配列\n\n/* methods */\n\n// ボタンの有効化\nfunction enableButton() {\n    // 追加する要素を格納する変数\n    var ele;\n    // ボタンクリック時の動作：青\n    $(\"#appendBlue\").click(function () {\n        console.log(\"青\", ele);\n        ele = $('<div class=\"b move\"></div>').appendTo('.drop_area');   // 要素の追加\n        update(ele);    // 状態の更新\n    });\n\n    // ボタンクリック時の動作：赤\n    $(\"#appendRed\").click(function () {\n        console.log(\"赤\", ele);\n        ele = $('<div class=\"r move\"></div>').appendTo('.drop_area');   // 要素の追加\n        update(ele);    // 状態の更新\n    });\n\n    // ボタンクリック時の動作：画像\n    $(\"#appendImage\").click(function () {\n        console.log(\"画像\", ele);\n        ele = $('<img src=\"img/test.png\" class=\"img move\">').appendTo('.drop_area');    // 要素の追加\n        update(ele);    // 状態の更新\n    });\n    // 選択要素の削除ボタン\n    $(\"#deleteSelectedElement\").click(function () {\n        $('.selected').remove();\n        selected_elements = [];\n    });\n    // 選択要素の回転ボタン\n    $(\"#rotateSelectedElement\").click(function () {\n        // 選択中の全ての要素に対して45度の回転を適用\n        selected_elements.forEach(function( target_element ) {\n            var mat = target_element.css(\"transform\");  // matrixを取得\n            var vec = matrix2vec(mat);                  // matrixを行列に変換\n            vec = rotate2D(vec, 45);                    // 行列を45度回転\n            mat = vec2matrix(vec);                      // 行列をmatrixに戻す\n            target_element.css('transform',mat);        // 回転\n\n        });\n    });\n}\n\n// 更新があったときに呼び出される\nfunction update(ele){\n    // 適当なidを割り振る\n    uuid = generateUuid();\n    ele.attr('id',uuid)\n    // .move要素を移動可能にする\n    ele.draggable({\n        containment: \".drop_area\" //ドラッグの範囲を制限\n    });\n    // 選択可能にする\n    ele.click(function(){\n        if( ele.hasClass('selected') ){\n            ele.removeClass('selected');    // 要素からselectedクラスを削除\n            selected_elements = selected_elements.filter(n => n !== ele);   // selected_elements配列から，eleのみを削除する\n        }\n        else{\n            ele.addClass('selected');       // 要素にselectedクラスを追加\n            selected_elements.push(ele);    // 配列に追加\n        }\n    });\n}\n\n\n\n\n/* UUID生成 */\n// Cf. https://qiita.com/psn/items/d7ac5bdb5b5633bae165\nfunction generateUuid() {\n    // https://github.com/GoogleChrome/chrome-platform-analytics/blob/master/src/internal/identifier.js\n    // const FORMAT: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n    let chars = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\");\n    for (let i = 0, len = chars.length; i < len; i++) {\n        switch (chars[i]) {\n            case \"x\":\n                chars[i] = Math.floor(Math.random() * 16).toString(16);\n                break;\n            case \"y\":\n                chars[i] = (Math.floor(Math.random() * 4) + 8).toString(16);\n                break;\n        }\n    }\n    return chars.join(\"\");\n}\n\n\n\n/*二次元回転*/\n// 度数をradに変換\n// https://lab.syncer.jp/Web/JavaScript/Snippet/51/\nfunction deg2rad(degree){\n    return degree * ( Math.PI / 180 ) ;\n}\n\n// CSS matrixを配列に変換する\n// https://qiita.com/shogito/items/a5be366464d8cca5bafb\nfunction matrix2vec(matrix){\n    var re = /matrix\\((.*)\\)/;\n    var vals = matrix.match(re)[1].replace(/ /g, \"\").split(\",\");\n    vec = vals.map(Number)\n    return vec;\n}\nfunction vec2matrix(vec){\n    var vals = [];\n    // 有効桁数を揃える\n    vals[0] = vec[0].toFixed(20);\n    vals[1] = vec[1].toFixed(20);\n    vals[2] = vec[2].toFixed(20);\n    vals[3] = vec[3].toFixed(20);\n    vals[4] = vec[4].toFixed(20);\n    vals[5] = vec[5].toFixed(20);\n    // 文字列化\n    var matrix = \n        \"matrix(\"+\n        vals[0]+\",\"+\n        vals[1]+\",\"+\n        vals[2]+\",\"+\n        vals[3]+\",\"+\n        vals[4]+\",\"+\n        vals[5]+\")\";\n    return matrix;\n}\n\n// CSS matrixの二次元回転\n// https://w3e.kanazawa-it.ac.jp/math/category/gyouretu/senkeidaisu/henkan-tex.cgi?target=/math/category/gyouretu/senkeidaisu/rotation_matrix_2d.html\n// https://ginpen.com/2018/11/13/understanding-transform-matrix/\nfunction rotate2D(vec,degree){\n    var ret = new Array(6);\n    // xベクトルに二次元回転行列をかける\n    ret[0] = vec[0]*Math.cos(deg2rad(degree)) - vec[1]*Math.sin(deg2rad(degree));\n    ret[1] = vec[0]*Math.sin(deg2rad(degree)) + vec[1]*Math.cos(deg2rad(degree));\n    // yベクトルに二次元回転行列をかける\n    ret[2] = vec[2]*Math.cos(deg2rad(degree)) - vec[3]*Math.sin(deg2rad(degree));\n    ret[3] = vec[2]*Math.sin(deg2rad(degree)) + vec[3]*Math.cos(deg2rad(degree));\n    // 起点の指定\n    ret[4] = vec[4];\n    ret[5] = vec[5];\n    return ret;\n}\n"]},"metadata":{},"sourceType":"module"}