{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\"; // 文字数をカウント (半角に対応)\n\nfunction count(text) {\n  var length = 0.0;\n\n  for (var i = 0; i < text.length; i++) {\n    text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n  }\n\n  return length;\n}\n\nexport const Model = _ref => {\n  _s();\n\n  let {\n    input_path\n  } = _ref;\n  const {\n    scene\n  } = Drei.useGLTF(input_path);\n  const name = \"レーザー\";\n\n  if (input_path === \"./models/map_nature.glb\") {}\n};\n\n_s(Model, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [Drei.useGLTF];\n});\n\n_c = Model;\n\nvar _c;\n\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"sources":["C:/Users/hiira_p/Desktop/program/光学教育コンテンツ/kougaku-editor/kougaku-editor/src/components/Model.js"],"names":["React","Drei","Html","Stats","count","text","length","i","match","Model","input_path","scene","useGLTF","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B,C,CAEA;;AACA,SAASC,KAAT,CAAeC,IAAf,EAAoB;AAChB,MAAIC,MAAM,GAAG,GAAb;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGF,IAAI,CAACC,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;AAC/BF,IAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQC,KAAR,CAAc,OAAd,IAAyBF,MAAM,IAAI,GAAnC,GAAyCA,MAAM,IAAI,GAAnD;AACH;;AACD,SAAOA,MAAP;AACH;;AAED,OAAO,MAAMG,KAAK,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAYV,IAAI,CAACW,OAAL,CAAaF,UAAb,CAAlB;AACA,QAAMG,IAAI,GAAC,MAAX;;AACA,MAAGH,UAAU,KAAG,yBAAhB,EAA0C,CAEzC;AAEJ,CAPM;;GAAMD,K;UACSR,IAAI,CAACW,O;;;KADdH,K","sourcesContent":["import React from 'react'\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\";\n\n// 文字数をカウント (半角に対応)\nfunction count(text){\n    var length = 0.0;\n    for(var i=0; i < text.length; i++) {\n        text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n    }\n    return length;\n}\n\nexport const Model = ({input_path}) => {\n    const { scene } = Drei.useGLTF(input_path);\n    const name=\"レーザー\"\n    if(input_path===\"./models/map_nature.glb\"){\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}