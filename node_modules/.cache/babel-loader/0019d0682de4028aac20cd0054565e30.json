{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiira_p\\\\Desktop\\\\program\\\\\\u5149\\u5B66\\u6559\\u80B2\\u30B3\\u30F3\\u30C6\\u30F3\\u30C4\\\\kougaku-editor\\\\kougaku-editor\\\\src\\\\components\\\\Model3D.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\"; // 文字数をカウント (半角に対応)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction count(text) {\n  var length = 0.0;\n\n  for (var i = 0; i < text.length; i++) {\n    text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n  }\n\n  return length;\n}\n\nexport const Model3D = _ref => {\n  _s();\n\n  let {\n    value\n  } = _ref;\n  console.log(value.pos);\n  const {\n    scene\n  } = Drei.useGLTF(value.input_path);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(Html, {\n      position: [value.pos[0] * 10, value.pos[1] * 10 + 5, value.pos[2] * 10],\n      center: true,\n      className: \"innerText\",\n      style: {\n        width: count(value.name) + 1 + 'em'\n      },\n      distanceFactor: 30,\n      occlude: true,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: value.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"primitive\", {\n      position: [value.pos[0] * 10, value.pos[1] * 10, value.pos[2] * 10],\n      object: scene,\n      roughness: 0,\n      smoothness: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Model3D, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [Drei.useGLTF];\n});\n\n_c = Model3D;\n\nvar _c;\n\n$RefreshReg$(_c, \"Model3D\");","map":{"version":3,"sources":["C:/Users/hiira_p/Desktop/program/光学教育コンテンツ/kougaku-editor/kougaku-editor/src/components/Model3D.js"],"names":["React","Drei","Html","Stats","count","text","length","i","match","Model3D","value","console","log","pos","scene","useGLTF","input_path","width","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B,C,CAEA;;;;AACA,SAASC,KAAT,CAAeC,IAAf,EAAoB;AAChB,MAAIC,MAAM,GAAG,GAAb;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGF,IAAI,CAACC,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;AAC/BF,IAAAA,IAAI,CAACE,CAAD,CAAJ,CAAQC,KAAR,CAAc,OAAd,IAAyBF,MAAM,IAAI,GAAnC,GAAyCA,MAAM,IAAI,GAAnD;AACH;;AACD,SAAOA,MAAP;AACH;;AAED,OAAO,MAAMG,OAAO,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYb,IAAI,CAACc,OAAL,CAAaL,KAAK,CAACM,UAAnB,CAAlB;AACA,sBACA;AAAM,IAAA,aAAa,MAAnB;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,CAACN,KAAK,CAACG,GAAN,CAAU,CAAV,IAAa,EAAd,EAAkBH,KAAK,CAACG,GAAN,CAAU,CAAV,IAAa,EAAb,GAAgB,CAAlC,EAAqCH,KAAK,CAACG,GAAN,CAAU,CAAV,IAAa,EAAlD,CAAhB;AAAuE,MAAA,MAAM,EAAE,IAA/E;AAAqF,MAAA,SAAS,EAAC,WAA/F;AAA2G,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAEb,KAAK,CAACM,KAAK,CAACQ,IAAP,CAAL,GAAkB,CAAlB,GAAoB;AAA5B,OAAlH;AAAqJ,MAAA,cAAc,EAAE,EAArK;AAAyK,MAAA,OAAO,EAAE,IAAlL;AAAA,6BACI;AAAA,kBAAIR,KAAK,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAW,MAAA,QAAQ,EAAE,CAACR,KAAK,CAACG,GAAN,CAAU,CAAV,IAAa,EAAd,EAAkBH,KAAK,CAACG,GAAN,CAAU,CAAV,IAAa,EAA/B,EAAmCH,KAAK,CAACG,GAAN,CAAU,CAAV,IAAa,EAAhD,CAArB;AAA0E,MAAA,MAAM,EAAEC,KAAlF;AAAyF,MAAA,SAAS,EAAE,CAApG;AAAuG,MAAA,UAAU,EAAE;AAAnH;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASH,CAZM;;GAAML,O;UAESR,IAAI,CAACc,O;;;KAFdN,O","sourcesContent":["import React from 'react'\nimport * as Drei from \"@react-three/drei\";\nimport { Html, Stats } from \"@react-three/drei\";\n\n// 文字数をカウント (半角に対応)\nfunction count(text){\n    var length = 0.0;\n    for(var i=0; i < text.length; i++) {\n        text[i].match(/[ -~]/) ? length += 0.5 : length += 1.0;\n    }\n    return length;\n}\n\nexport const Model3D = ({value}) => {\n    console.log(value.pos);\n    const { scene } = Drei.useGLTF(value.input_path);\n    return (\n    <mesh receiveShadow>\n        <Html position={[value.pos[0]*10, value.pos[1]*10+5, value.pos[2]*10]} center={true} className=\"innerText\" style={{width: count(value.name)+1+'em'}} distanceFactor={30} occlude={true}>\n            <p>{value.name}</p>\n        </Html>\n        <primitive position={[value.pos[0]*10, value.pos[1]*10, value.pos[2]*10]} object={scene} roughness={0} smoothness={10} />\n        \n    </mesh>        \n    )\n}"]},"metadata":{},"sourceType":"module"}